name: Test source

on:
  push:
    branches:
      - main
    paths:
      - 'Organize/src/**'
      - '!Organize/src/starters/*.pdf'
  pull_request:
    branches:
      - main
    paths:
      - 'Organize/src/**'
      - '!Organize/src/starters/*.pdf'
  workflow_dispatch:


env:
  THEME_TO_TEST: "White"

jobs:

  Init:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8',  '3.10']

    steps:
      - name: clone repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Organize.py
        run: |
          python Organize/Organize.py



  Adding_solutions:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.10']

    steps:
      - name: clone repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Organize.py init "$THEME_TO_TEST" theme
        run: |
          python Organize/Organize.py "$THEME_TO_TEST"

      - name: Test writing to theme
        shell: bash
        run: |
          echo "Przygotowuje zeszytu "$THEME_TO_TEST" do symulacji uzywania"
          mv Notebooks/*"$THEME_TO_TEST".pdf Notebooks/input.pdf
          python Organize/src/additional_scripts/simulate_writing.py

          # Usuwam wszystkie Rozwiązania projektu
          find ./Solutions -type f -path '*/resources/pdfs/source_raw.pdf' -exec rm -f {} \;

          # Odpalam skrypt na zeszycie
          python Organize/Organize.py raw

          # Sprawdzenie dla zadań nieparzystych: rozwiązanie musi istnieć
          find Solutions -type d -regex '.*[13579]$' | while read dir; do
              if [ ! -f "$dir/resources/pdfs/source_raw.pdf" ]; then
                  echo "Błąd: Plik source_raw.pdf nie znaleziony w folderze: $dir"
                  exit 1  # Rzuca wyjątek (kończy skrypt z kodem błędu)
              fi
          done

          # Sprawdzenie dla zadań parzystych: rozwiązanie nie powinno istnieć
          find Solutions -type d -regex '.*[02468]$' | while read dir; do
              if [ -f "$dir/resources/pdfs/source_raw.pdf" ]; then
                  echo "Błąd: Plik source_raw.pdf nie powinien być obecny w folderze: $dir"
                  exit 1  # Rzuca wyjątek (kończy skrypt z kodem błędu)
              fi
          done
          echo "Pomyslnie sprawdzono dzialanie zeszytu!"


  Prepere_notebook:
    runs-on: macos-latest

    steps:
      - name: clone repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Organize.py init "$THEME_TO_TEST" theme
        run: |
          python Organize/Organize.py "$THEME_TO_TEST"

      - name: Test writing to theme
        shell: bash
        run: |
          echo "Przygotowuje zeszytu "$THEME_TO_TEST" do symulacji uzywania"
          mv Notebooks/*"$THEME_TO_TEST".pdf Notebooks/input.pdf
          python Organize/src/additional_scripts/simulate_writing.py

      - name: Upload_Notebook
        uses: actions/upload-artifact@v4
        with:
          name: Notebook
          path: ./Organize/output.pdf
          retention-days: 1


  Init_with_notebook:
    runs-on: ${{ matrix.os }}
    needs:  Prepere_notebook
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.10']

    steps:
      - name: clone repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Downland Notebook
        uses: actions/download-artifact@v4
        with:
          name: Notebook
          path: ./Organize

      - name: Run Organize.py
        run: |
          python Organize/Organize.py "$THEME_TO_TEST"
